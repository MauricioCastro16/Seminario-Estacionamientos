@using estacionamientos.ViewModels
@model List<PlayeroIndexVM>

@{
    ViewData["Title"] = "Playeros";
}

<div class="container">
    <!-- Encabezado: título a la izquierda, botones a la derecha -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="mb-0">Playeros</h1>
        <div>
            <a class="btn btn-primary" asp-controller="Playero" asp-action="Create" title="Agregar playero">
                <i class="fa-solid fa-plus"></i> Agregar Playero
            </a>
            <a class="btn btn-outline-secondary" asp-controller="Playero" asp-action="HistorialAgrupado">
                <i class="fa-solid fa-clock-rotate-left"></i> Historial
            </a>
        </div>
    </div>

    <h5 class="text-center mt-3">Mis Playeros</h5>

    <table class="table table-striped align-middle mt-3">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Playas asignadas</th>
                <th class="text-center">Acciones</th>
            </tr>
        </thead>
        <tbody>
            @if (Model is { Count: > 0 })
            {
                foreach (var row in Model)
                {
                    var p = row.Playero;
                    <tr>
                        <td>@p.UsuNyA</td>
                        <td>
                            @if (row.Playas.Count == 0)
                            {
                                <span class="text-muted">Sin asignaciones</span>
                            }
                            else
                            {
                                foreach (var playa in row.Playas)
                                {
                                    var etiqueta = !string.IsNullOrWhiteSpace(playa.PlyNom)
                                    ? playa.PlyNom
                                    : $"{playa.PlyCiu} - {playa.PlyDir}";

                                    <!-- Desasignar (marca histórico) -->
                                    <div class="playa-chip">
                                        @etiqueta
                                        <button type="button"
                                                class="remove-btn"
                                                title="Desasignar"
                                                data-bs-toggle="modal" 
                                                data-bs-target="#confirmUnassignModal"
                                                data-playero-id="@p.UsuNU"
                                                data-playero-name="@p.UsuNyA"
                                                data-playa-id="@playa.PlyID"
                                                data-playa-name="@etiqueta">
                                            <i class="fa-regular fa-circle-xmark"></i>
                                        </button>
                                    </div>
                                }
                            }
                        </td>
                        <td class="text-center">
                            <!-- Comentado el editar playero porque no considero que esté bien -->
                            <!--
                            <a class="btn btn-outline-primary btn-sm me-2" asp-controller="Playero" asp-action="Edit"
                                asp-route-id="@p.UsuNU" title="Editar">
                                        <i class="fa-regular fa-pen-to-square"></i>
                            </a>
                            -->
                            <a class="btn btn-outline-secondary btn-sm me-2" asp-controller="Playero" asp-action="Assign"
                                asp-route-id="@p.UsuNU" title="Vincular a una playa">
                                <i class="fa-solid fa-link"></i>
                            </a>

                            <button type="button" 
                                    class="btn btn-outline-danger btn-sm"
                                    title="Desvincular todas las playas"
                                    data-bs-toggle="modal" 
                                    data-bs-target="#confirmUnlinkModal"
                                    data-playero-id="@p.UsuNU"
                                    data-playero-name="@p.UsuNyA">
                                <i class="fa-solid fa-link-slash"></i>
                            </button>

                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="3" class="text-center text-muted">
                        No tenés playeros asignados en tus playas.
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Modal de confirmación para desvincular playero de todas las playas -->
    <div class="modal fade" id="confirmUnlinkModal" tabindex="-1" aria-labelledby="confirmUnlinkModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmUnlinkModalLabel">Confirmar Desvinculación Total</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>¿Estás seguro de que quieres desvincular este playero de todas sus playas?</p>
                    <p class="mb-0"><strong>Playero:</strong> <span id="playeroName"></span></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <form id="confirmUnlinkForm" asp-controller="Playero" asp-action="Delete" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" id="playeroId" name="id" />
                        <button type="submit" class="btn btn-danger">Desvincular</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal de confirmación para desvincular playero de una playa específica -->
    <div class="modal fade" id="confirmUnassignModal" tabindex="-1" aria-labelledby="confirmUnassignModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmUnassignModalLabel">Confirmar Desvinculación</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>¿Estás seguro de que quieres desvincular este playero de esta playa?</p>
                    <div class="card bg-light">
                        <div class="card-body">
                            <p class="mb-1"><strong>Playero:</strong> <span id="unassignPlayeroName"></span></p>
                            <p class="mb-0"><strong>Playa:</strong> <span id="unassignPlayaName"></span></p>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <form id="confirmUnassignForm" asp-controller="Playero" asp-action="Unassign" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" id="unassignPlayeroId" name="plaNU" />
                        <input type="hidden" id="unassignPlayaId" name="plyID" />
                        <button type="submit" class="btn btn-danger">Desvincular</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .playa-chip {
        display: inline-flex;
        align-items: center;
        background: #f1f8ff;
        /* azul muy claro */
        color: #1b3a68;
        /* azul Bootstrap */
        border: 1px solid #0f2647;
        border-radius: 999px;
        padding: 0.25rem 0.6rem;
        font-size: .85rem;
        margin: 0.15rem;
    }

    .playa-chip .remove-btn {
        background: none;
        border: none;
        color: #dc3545;
        /* rojo Bootstrap */
        margin-left: .4rem;
        padding: 0;
        cursor: pointer;
    }

    .playa-chip .remove-btn:hover {
        color: #a71d2a;
    }
</style>

@section Scripts {
<script>
    // Manejar el modal de confirmación para desvincular playero
    document.addEventListener('DOMContentLoaded', function() {
        // Modal para desvincular de todas las playas
        const confirmUnlinkModal = document.getElementById('confirmUnlinkModal');
        const playeroNameSpan = document.getElementById('playeroName');
        const playeroIdInput = document.getElementById('playeroId');

        if (confirmUnlinkModal) {
            confirmUnlinkModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;
                const playeroId = button.getAttribute('data-playero-id');
                const playeroName = button.getAttribute('data-playero-name');

                // Actualizar el contenido del modal
                playeroNameSpan.textContent = playeroName;
                playeroIdInput.value = playeroId;
            });
        }

        // Modal para desvincular de una playa específica
        const confirmUnassignModal = document.getElementById('confirmUnassignModal');
        const unassignPlayeroNameSpan = document.getElementById('unassignPlayeroName');
        const unassignPlayaNameSpan = document.getElementById('unassignPlayaName');
        const unassignPlayeroIdInput = document.getElementById('unassignPlayeroId');
        const unassignPlayaIdInput = document.getElementById('unassignPlayaId');

        if (confirmUnassignModal) {
            confirmUnassignModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;
                const playeroId = button.getAttribute('data-playero-id');
                const playeroName = button.getAttribute('data-playero-name');
                const playaId = button.getAttribute('data-playa-id');
                const playaName = button.getAttribute('data-playa-name');

                // Actualizar el contenido del modal
                unassignPlayeroNameSpan.textContent = playeroName;
                unassignPlayaNameSpan.textContent = playaName;
                unassignPlayeroIdInput.value = playeroId;
                unassignPlayaIdInput.value = playaId;
            });
        }
    });
</script>
}